name: Build documentation

on:
  push:
    branches: ["main"]

permissions:
  id-token: write
  pages: write

env:
  # Name of help module and instance id separated by a slash
  INSTANCE: Writerside/hi
  # Replace HI with the ID of the instance in capital letters
  ARTIFACT: webHelpHI2-all.zip
  # Writerside docker image version
  DOCKER_VERSION: 233.14389
  # Add the variable below to upload Algolia indexes
  # Replace HI with the ID of the instance in capital letters
  ALGOLIA_ARTIFACT: algolia-indexes-HI.zip

jobs:
  construir:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repositorio
        uses: actions/checkout@v4

      - name: Construir documentación de Writerside usando Docker
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Subir artefacto
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            artifacts/${{ env.ARTIFACT }}
            artifacts/report.json
          retention-days: 7

      - name: Subir algolia-indexes
        uses: actions/upload-artifact@v3
        with:
          name: algolia-indexes
          path: artifacts/${{ env.ALGOLIA_ARTIFACT }}
          retention-days: 7

  # Add the job below and artifacts/report.json on Upload documentation step above
  # if you want to fail the build when documentation contains errors
  comprobar:
    # Requires build job results
    needs: construir
    runs-on: ubuntu-latest

    steps:
      - name: Descargar artefactos
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts

      - name: Comprobar documentación
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE }}

  publicar:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Requires the build job results
    needs: comprobar
    runs-on: ubuntu-latest
    steps:
      - name: Descargar artefacto
        uses: actions/download-artifact@v4
        with:
          name: docs

      - name: Descomprimir artefacto
        run: unzip -O UTF-8 -qq ${{ env.ARTIFACT }} -d dir

      - name: Configurar Pages
        uses: actions/configure-pages@v4

      - name: Subir artefacto
        uses: actions/upload-pages-artifact@v3
        with:
          path: dir

      - name: Implementar en GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
